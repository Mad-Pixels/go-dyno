name: Checks

on:
  workflow_call:
    secrets:
      gitleaks:
        required: true

permissions:
  contents: read

jobs:
  go-vendor:
    name: Go Vendor
    runs-on: ubuntu-latest
    outputs:
      go_version: ${{ steps.norm_go.outputs.go_version }}
      vendor_key: ${{ steps.vendor_restore.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect Go version
        id: get_go
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/get/version

      - name: Normalize Go version
        id: norm_go
        shell: bash
        env:
          RAW: ${{ steps.get_go.outputs.task_output }}
        run: |
          set -euo pipefail
          V="$(printf '%s' "${RAW:-}" | tr -d '\r' | head -n1 | xargs)"
          echo "go_version=$V" >> "$GITHUB_OUTPUT"
          echo "Detected Go version: $V"

      - name: Restore Go vendor
        id: vendor_restore
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor/
            go.sum
          key: go-vendor-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            go-vendor-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}-
            go-vendor-${{ runner.os }}-

      - name: Run go vendor
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/mod/vendor

      - name: Verify vendoring
        shell: bash
        run: go mod verify

      - name: Save Go vendor
        uses: actions/cache/save@v4
        with:
          path: |
            vendor/
            go.sum
          key: ${{ steps.vendor_restore.outputs.cache-primary-key }}

  golint:
    name: GoLint
    runs-on: ubuntu-latest
    needs: [go-vendor]
    steps:
      - uses: actions/checkout@v4

      - name: Restore Go vendor (exact key from go-vendor)
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor/
            go.sum
          key: ${{ needs.go-vendor.outputs.vendor_key }}

      - name: Run go vendor
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/mod/vendor

      - name: Run GoLint
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/run/lint

  app-tests:
    name: App
    runs-on: ubuntu-latest
    needs: [go-vendor]
    steps:
      - uses: actions/checkout@v4

      - name: Restore Go vendor (exact key from go-vendor)
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor/
            go.sum
          key: ${{ needs.go-vendor.outputs.vendor_key }}

      - name: Run go vendor
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/mod/vendor

      - name: Run Go Tests
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/tests/app

  compile-tests:
    name: Compile
    runs-on: ubuntu-latest
    needs: [go-vendor]
    steps:
      - uses: actions/checkout@v4

      - name: Restore Go vendor (exact key from go-vendor)
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor/
            go.sum
          key: ${{ needs.go-vendor.outputs.vendor_key }}

      - name: Run go vendor
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/mod/vendor

      - name: Run template compile tests
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: go/tests/compile

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: TfFmt
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: tf/fmt

  leaks:
    name: GitLeaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.gitleaks }}